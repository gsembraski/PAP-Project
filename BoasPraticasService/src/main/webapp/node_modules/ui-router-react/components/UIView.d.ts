import * as React from 'react';
import { Component, ValidationMap } from 'react';
import { ActiveUIView, ViewContext } from "ui-router-core";
import { ReactViewConfig } from "../ui-router-react";
export interface UIViewAddress {
    context: ViewContext;
    fqn: string;
}
export interface IProps {
    name?: string;
    className?: string;
    style?: Object;
}
export interface IState {
    id?: number;
    loaded?: boolean;
    component?: string;
    props?: any;
}
export declare class UIView extends Component<IProps, IState> {
    uiViewData: ActiveUIView;
    uiViewAddress: UIViewAddress;
    deregister: Function;
    componentInstance: any;
    removeHook: Function;
    state: IState;
    static propTypes: ValidationMap<IProps>;
    static childContextTypes: ValidationMap<any>;
    static contextTypes: ValidationMap<any>;
    render(): React.ReactElement<any>;
    getChildContext(): {
        parentUIViewAddress: UIViewAddress;
    };
    componentWillMount(): void;
    componentWillUnmount(): void;
    viewConfigUpdated(newConfig: ReactViewConfig): void;
    registerUiCanExitHook(stateName: string): void;
}
